.. _ja_api:

API リファレンス
========================

.. contents::
   :backlinks: none
   :local:

.. _ja_api_http:

HTTP API
----------------------

/data/<key>
^^^^^^^^^^^^^^^^^^^^^^

GET /data/<key>
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトのデータを取得します。

オブジェクトが見つかった場合はステータスコード *200 OK* で返り、 *application/octet-stream* のデータを返します。
オブジェクトが見つからなかった場合はステータスコード *404 Not Found* で返ります。

次のパラメータを指定することができます：

  vtime=<integer>
    取得するオブジェクトのバージョンを世界協定時（UTC）のUNIX時刻で指定します。この時刻以前に作成された最新のバージョンを返します。 *vname=* と同時に指定することはできません。
  vname=<string>
    取得するオブジェクトのバージョンを名前で指定します。指定した名前に一致するバージョンを返します。 *vtime=* と同時に指定することはできません。


POST /data/<key>
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトを追加します。

成功した場合はステータスコード *200 OK* で返ります。

次のパラメータを指定することができます：

  data=<bytes>
    追加するデータ本体を設定します。このパラメータは必須です。
  vname=<string>
    追加するオブジェクトのバージョン名を設定します。
  attrs=<format>
    オブジェクトの属性を設定します。属性は *format=* で指定した形式でエンコードします。
  format=<string>
    属性のエンコード形式を指定します。 *attrs=* が指定されているときだけ有効です。json (JSON)、msgpack (MessagePack)、tsv (Tab-separated values) を指定することができます。デフォルトは json です。


PUT /data/<key>
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトを追加します。

動作はPOSTと同じでが、成功した場合はステータスコード *202 Accepted* で返ります。


/attrs/<key>
^^^^^^^^^^^^^^^^^^^^^^

GET /attrs/<key>
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトの属性を取得します。

成功した場合はステータスコード *200 OK* で返り、 *form=* パラメータで指定された形式でエンコードされたデータを返します。

次のパラメータを指定することができます：

  vtime=<integer>
    取得するオブジェクトのバージョンを世界協定時（UTC）のUNIX時刻で指定します。この時刻以前に作成された最新のバージョンを返します。 *vname=* と同時に指定することはできません。
  vname=<string>
    取得するオブジェクトのバージョンを名前で指定します。指定した名前に一致するバージョンを返します。 *vtime=* と同時に指定することはできません。
  format=<string>
    属性のエンコード形式を指定します。json (JSON; application/json)、msgpack (MessagePack; application/x-msgpack)、tsv (Tab-separated values; text/tab-separated-values) を指定することができます。デフォルトは json です。


POST /attrs/<key>
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトの属性を上書きして更新します。

オブジェクトが見つかった場合はステータスコード *200 OK* で返ります。
オブジェクトが見つからなかった場合はステータスコード *404 Not Found* で返ります。

次のパラメータを指定することができます：

  attrs=<format>
    オブジェクトの属性を設定します。属性は *format=* で指定した形式でエンコードします。このパラメータは必須です。
  format=<string>
    属性のエンコード形式を指定します。 *attrs=* が指定されているときだけ有効です。json (JSON)、msgpack (MessagePack)、tsv (Tab-separated values) を指定することができます。デフォルトは json です。


/api/<command>
^^^^^^^^^^^^^^^^^^^^^^

GET /api/get_data
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトのデータを取得します。

オブジェクトが見つかった場合はステータスコード *200 OK* で返り、 *application/octet-stream* のデータを返します。
オブジェクトが見つからなかった場合はステータスコード *404 Not Found* で返ります。

次のパラメータを指定することができます：

  key=<string>
    取得するオブジェクトのキーを設定します。このパラメータは必須です。
  vtime=<integer>
    取得するオブジェクトのバージョンを世界協定時（UTC）のUNIX時刻で指定します。この時刻以前に作成された最新のバージョンを返します。 *vname=* と同時に指定することはできません。
  vname=<string>
    取得するオブジェクトのバージョンを名前で指定します。指定した名前に一致するバージョンを返します。*vtime=*と同時に指定することはできません。


GET /api/get_attrs
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトの属性を取得します。

成功した場合はステータスコード *200 OK* で返り、 *form=* パラメータで指定された形式でエンコードされたデータを返します。

次のパラメータを指定することができます：

  key=<string>
    取得するオブジェクトのキーを設定します。このパラメータは必須です。
  vtime=<integer>
    取得するオブジェクトのバージョンを世界協定時（UTC）のUNIX時刻で指定します。この時刻以前に作成された最新のバージョンを返します。 *vname=* と同時に指定することはできません。
  vname=<string>
    取得するオブジェクトのバージョンを名前で指定します。指定した名前に一致するバージョンを返します。 *vtime=* と同時に指定することはできません。
  format=<string>
    属性のエンコード形式を指定します。json (JSON; application/json)、msgpack (MessagePack; application/x-msgpack)、tsv (Tab-separated values; text-tab-separated-values) を指定することができます。デフォルトは json です。


POST /api/add
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトを追加します。

成功した場合はステータスコード *200 OK* で返ります。

次のパラメータを指定することができます：

  key=<string>
    追加するオブジェクトのキーを設定します。このパラメータは必須です。
  data=<bytes>
    追加するデータ本体を設定します。このパラメータは必須です。
  vname=<string>
    追加するオブジェクトのバージョン名を設定します。
  attrs=<format>
    オブジェクトの属性を設定します。属性は *format=* で指定した形式でエンコードします。
  format=<string>
    属性のエンコード形式を指定します。 *attrs=* が指定されているときだけ有効です。json (JSON)、msgpack (MessagePack)、tsv (Tab-separated values) を指定することができます。デフォルトは json です。


POST /api/update_attrs
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトの属性を上書きして更新します。

成功した場合はステータスコード *200 OK* で返ります。

次のパラメータを指定することができます：

  key=<string>
    追加するオブジェクトのキーを設定します。このパラメータは必須です。
  attrs=<bytes>
    属性本体を設定します。このパラメータは必須です。
  attrs=<format>
    オブジェクトの属性を設定します。属性は *format=* で指定した形式でエンコードします。
  format=<string>
    属性のエンコード形式を指定します。 *attrs=* が指定されているときだけ有効です。json (JSON)、msgpack (MessagePack)、tsv (Tab-separated values) を指定することができます。デフォルトは json です。


POST /api/delete
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトを削除します。

削除に成功した場合はステータスコード *200 OK* で返ります。
オブジェクトが存在しなかった場合はステータスコード *404 Not Found* で返ります。

次のパラメータを指定することができます：

  key=<string>
    削除するオブジェクトのキーを設定します。このパラメータは必須です。
  vtime=<integer>
    取得するオブジェクトのバージョンを世界協定時（UTC）のUNIX時刻で指定します。この時刻以前に作成された最新のバージョンを返します。 *vname=* と同時に指定することはできません。
  vname=<string>
    取得するオブジェクトのバージョンを名前で指定します。指定した名前に一致するバージョンを返します。 *vtime=* と同時に指定することはできません。


POST /api/remove
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトを削除します。POST /api/delete?key=<key> と似ていますが、MDSがバージョニングをサポートしている場合、実際のデータは削除せずに残します。

削除に成功した場合はステータスコード *200 OK* で返ります。
オブジェクトが存在しなかった場合はステータスコード *404 Not Found* で返ります。

次のパラメータを指定することができます：

  key=<string>
    削除するオブジェクトのキーを設定します。このパラメータは必須です。


GET /api/url
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトが実際に保存されている DS (Data Server) を1つ選択し、そこから直接データを取得するためのURLを取得します。DSに *--http* 引数か *--http-redirect-port* 引数が設定されている場合にのみ有効です。

オブジェクトが見つかった場合はステータスコード *200 OK* で返り、 *text/plain* 形式でURLを返します。
オブジェクトが見つからなかった場合はステータスコード *404 Not Found* で返ります。

次のパラメータを指定することができます：

  key=<string>
    取得するオブジェクトのキーを設定します。このパラメータは必須です。
  vtime=<integer>
    取得するオブジェクトのバージョンを世界協定時（UTC）のUNIX時刻で指定します。この時刻以前に作成された最新のバージョンを返します。 *vname=* と同時に指定することはできません。
  vname=<string>
    取得するオブジェクトのバージョンを名前で指定します。指定した名前に一致するバージョンを返します。 *vtime=* と同時に指定することはできません。

関連： :ref:`ja_howto_ddt`


/redirect/<key>
^^^^^^^^^^^^^^^^^^^^^^

GET /redirect/<key>
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

GET /api/url?key=<key> と似ていますが、オブジェクトが実際に見つかった場合はステータスコード *302 Found* で返り、 *Location:*  ヘッダを使ってリダイレクトします。

関連： :ref:`ja_howto_ddt`


.. _ja_api_rpc:

MessagePack-RPC API
----------------------

.. TODO

取得API
^^^^^^^^^^^^^^^^^^^^^^

get(key:Raw) -> (data:Raw, attributes:Map<Raw,Raw>)
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトのデータと属性を取得します。


get_data(key:Raw) -> data:Raw
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトのデータを取得します。


get_attrs(key:Raw) -> attributes:Map<Raw,Raw>
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトの属性を取得します。


read(key:Raw, offset:Integer, size:Integer) -> data:Raw
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトのデータの一部を取得します。


バージョン指定付きの取得API
^^^^^^^^^^^^^^^^^^^^^^

gett(vtime:Integer, key:Raw) -> (data:Raw, attributes:Map<Raw,Raw>)
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

時刻を指定して、オブジェクトのデータを取得します。指定した時刻以前に作成された最新のバージョンを返します。


gett_data(vtime:Integer, key:Raw) -> data:Raw
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

時刻を指定して、オブジェクトのデータを取得します。指定した時刻以前に作成された最新のバージョンを返します。


gett_attrs(vtime:Integer, key:Raw) -> attributes:Map<Raw,Raw>
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

時刻を指定して、オブジェクトの属性を取得します。指定した時刻以前に作成された最新のバージョンを返します。


readt(vtime:Integer, key:Raw, offset:Integer, size:Integer) -> data:Raw
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

時刻を指定して、オブジェクトのデータの一部を取得します。指定した時刻以前に作成された最新のバージョンを返します。


getv(vname:Raw, key:Raw) -> (data:Raw, attributes:Map<Raw,Raw>)
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

バージョン名を指定して、オブジェクトのデータと属性を取得します。指定した名前に一致するバージョンを返します。


getv_data(vname:Raw, key:Raw) -> data:Raw
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

バージョン名を指定して、オブジェクトのデータを取得します。指定した名前に一致するバージョンを返します。


getv_attrs(vname:Raw, key:Raw) -> attributes:Map<Raw,Raw>
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

バージョン名を指定して、オブジェクトの属性を取得します。指定した名前に一致するバージョンを返します。


readv(vname:Raw, key:Raw, offset:Integer, size:Integer) -> data:Raw
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

バージョン名を指定して、オブジェクトのデータの一部を取得します。指定した名前に一致するバージョンを返します。


追加API
^^^^^^^^^^^^^^^^^^^^^^

add(key:Raw, data:Raw, attributes:Map<Raw,Raw>) -> objectKey:Object
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトを追加します。バージョン名は空になります。


add_data(key:Raw, data:Raw) -> objectKey:Object
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトを追加します。属性は空の連想配列になります。バージョン名は空になります。


addv(vname:Raw, key:Raw, data:Raw, attributes:Map<Raw,Raw>) -> objectKey:Object
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

バージョン名を指定してオブジェクトを追加します。


addv_data(vname:Raw, key:Raw, data:Raw) -> objectKey:Object
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

バージョン名を指定してオブジェクトを追加します。属性は空の連想配列になります。


削除API
^^^^^^^^^^^^^^^^^^^^^^

delete(key:Raw) -> deleted:Boolean
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトを削除します。


deletet(vtime:Integer, key:Raw) -> deleted:Boolean
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

時刻を指定して、オブジェクトを削除します。


deletev(vname:Raw, key:Raw) -> deleted:Boolean
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

バージョン名を指定して、オブジェクトを削除します。


remove(key:Raw) -> removed:Boolean
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトを削除します。delete(key) と似ていますが、


上書き更新API
^^^^^^^^^^^^^^^^^^^^^^

update_attrs(key:Raw, attributes:Map<Raw,Raw>) -> objectKey:Object
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

オブジェクトの属性を上書きして更新します。


直接取得API
^^^^^^^^^^^^^^^^^^^^^^

getd_data(objectKey:Object) -> data:Raw
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

MDSに問い合わせをせずに、データを取得します。MDSがバージョニングをサポートしている場合、実際のデータは削除せずに残します。


readd(objectKey:Object, offset:Integer, size:Integer) -> data:Raw
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

MDSに問い合わせをせずに、データの一部を取得します。

